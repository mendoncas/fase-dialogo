using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class DisplayText : MonoBehaviour
{
    public Text DialogueText;

    public Button firstButton;

    public Button secondButton;


    [SerializeField] AudioClip[] badMeows;
    [SerializeField] AudioClip[] goodMeows;

    AudioSource audio;

    private string[]
        respostas =
        {
            "Na verdade, n√£o muito bem...",
            "(mentir) Estou √≥timo! E voc√™? ",
            "Na verdade, n√£o muito bem...",
            "(insistir) Loucura... Estou bem! Agora, acho que preciso ir",
            "Contar como tem se sentido",
            "Inventar uma desculpa pra escapulir",
            "sim",
            "n√£o"
        };

    private string[] perguntas =
            {
                "Linus! Quanto tempo! Mal te reconheci... Como voc√™ tem estado?",
                "Mesmo? Estive preocupado com voc√™... Sumiu de repente por tanto tempo, e ainda aparece assim parecendo que n√£o toma um banho h√° dias...",
                "Sabia! Meu sentido aranha nunca me engana üòé. Agora, me conta logo o que t√° acontecendo contigo. Sei que tamb√©m sumi um pouco, mas a vida √© assim... Ainda somos brothers, n√©?  ",
                "Meu Deus. Isso √© muito pra digerir... N√£o sou muito bom com essas coisas profundas... Mas n√£o preciso ser bom com isso! Algumas pessoas s√£o pagas pra trabalhar com esse tipo de coisa, sabia? Conhe√ßo um √≥timo psic√≥logo. Sei que n√£o faz bem o seu estilo, mas acho que voc√™ deveria dar uma chance. O que me diz?",

                // #FRASE SINALIZANDO GOOD ENDING
                "Luca apresenta Linus a um profissional. Buscar ajuda √© um passo na dire√ß√£o certa, mas tamb√©m √© o come√ßo de um novo desafio para Linus...",

                // #FRASE SINALIZANDO BAD ENDING
                "Linus n√£o consegue dizer o que sente e isso o mant√©m preso com os pr√≥prios pensamentos. Linus volta pra casa, sabendo que amanh√£ ter√° que enfrentar tudo de novo. Mas quem sabe alguma outra vez... Um dia ap√≥s o outro, n√©?"
            };

    private bool isDisplaying;

    private int sentenceIndex = 0;

    private int buttonIndex = 0;
    Vector3 pos;
    float timeleft = 3f;

    void Start()
    {
        audio = GetComponent<AudioSource>();
        isDisplaying = false;
        DialogueText.text = "";
        firstButton.onClick.AddListener (secondOnClick);
        secondButton.onClick.AddListener (firstOnClick);
    }

    // Update is coalled once per frame
    void Update()
    {
        timeleft -= Time.deltaTime;
        if(timeleft < 0){
            RandomizeButtonPosition();
            timeleft = 0.5f;
        }
        if (
            Input.GetKeyDown(KeyCode.Space) &&
            isDisplaying == false &&
            sentenceIndex < perguntas.Length
        )
        {
            isDisplaying = true;
            StartCoroutine(displayDialogue(perguntas[sentenceIndex]));
            firstButton.GetComponentInChildren<Text>().text =
                respostas[sentenceIndex];
            secondButton.GetComponentInChildren<Text>().text =
                respostas[sentenceIndex + 1];
            sentenceIndex++;
        }
    }

    private IEnumerator displayDialogue(string phrase)
    {
        stringSplitter (phrase);
        yield return new WaitForSeconds((phrase.Length + 45) * 0.035f);
    }

    private void stringSplitter(string sentence)
    {
        DialogueText.text = "";
        string[] characters = new string[sentence.Length];

        for (int i = 0; i < sentence.Length; i++)
        {
            characters[i] = System.Convert.ToString(sentence[i]);
        }
        StartCoroutine(stringDisplayDelay(characters));
    }

    private IEnumerator stringDisplayDelay(string[] characters)
    {
        for (int i = 0; i < characters.Length; i++)
        {
            DialogueText.text += characters[i];
            yield return new WaitForSeconds(0.025f);
        }
        isDisplaying = false;
    }

    public void firstOnClick()
    {
        Debug.Log("PRIMEIRO BOT√ÉO CLICADO");
        PlayGoodMeow();
        isDisplaying = true;
        StartCoroutine(displayDialogue(perguntas[sentenceIndex]));
        firstButton.GetComponentInChildren<Text>().text =
            respostas[buttonIndex];
        secondButton.GetComponentInChildren<Text>().text =
            respostas[buttonIndex + 1];
        buttonIndex += 2;
        sentenceIndex++;
    }

    public void secondOnClick()
    {
        Debug.Log("SEGUNDO BOT√ÉO CLICADO");
        PlayBadMeow();
        // secondButton.anchorPosition = new Vector3(pos.x, 840, pos.z);
        // isDisplaying = true;
        // StartCoroutine(displayDialogue(perguntas[sentenceIndex]));
        // firstButton.GetComponentInChildren<Text>().text =
        //     respostas[buttonIndex];
        // secondButton.GetComponentInChildren<Text>().text =
        //     respostas[buttonIndex + 1];
        // buttonIndex += 2;
        // sentenceIndex+=2;
    }
    
    void RandomizeButtonPosition(){
        var btn = GameObject.Find("secondButton");
        var pos = btn.transform.position;
        pos.x -= UnityEngine.Random.Range(-31, 31);
        pos.y -= UnityEngine.Random.Range(-19, 19);
        btn.transform.position = pos;

    }
    void PlayBadMeow(){
        AudioClip clip = badMeows[UnityEngine.Random.Range(0, badMeows.Length)];
        audio.PlayOneShot(clip);
    }

    void PlayGoodMeow(){
        AudioClip clip = goodMeows[UnityEngine.Random.Range(0, goodMeows.Length)];
        audio.PlayOneShot(clip);
    }
}
